doctype html

html
	head
		meta(charset="utf-8")
		meta(name="viewport" content="width=device-width, initial-scale=1.0")
		meta(property="og:title" content="XXX的測驗結果")
		meta(property="og:image" content="https://rogeryeeaah.github.io/hm/img/1.jpg")
		title NesswellnessWheel - Know about your self
		script(src="scripts/v3.2.8/vue.global.prod.js" type="text/javascript" charset="utf-8")
		script(src="scripts/axios/axios.min.js" type="text/javascript" charset="utf-8")
		script(src="./scripts/jquery/jquery.min.js")
		script(src="./scripts/swiper/swiper-bundle.min.js")
		script(src="./scripts/popper/popper.min.js")
		script(src="./scripts/tippy/tippy.js")

		link(rel="stylesheet", href="./styles/swiper/swiper.min.css")
		link(rel="stylesheet", href="./styles/reset.css")
		link(rel="stylesheet", href="./styles/custom.css")

	body.cate-01
		.question-page
			#app.container
				.function-box
					.swiper-pagination
					span.des Completed
				.swiper.mySwiper
					.swiper-wrapper
						qs(:qs="questions")

					.process-box
						span.current {{ ansQ }}
						span / 
						span.total {{ totalQ }}
						span questions answered
					.swiper-next Next
					.swiper-prev Back

				.submit-box
					button#submit.show(type="submit" value="Submit") Submit

		include ./include/footer

		
		script#qs(type="text/x-template")
			.swiper-slide(v-for="(items, index) in qs" key="index" :class="index===qs.length-1?'last-one':''")
				.title-box
					.title {{ items.cate }}
						button#des(:data-tippy-content="items.des")
				.scroll-box
					qc(:qc="qs[index]")
		
		script#qc(type="text/x-template")
			.q-card(v-for="(items, index) in qc.content" key="index")
				.question {{ items.title }}
				.option-box
					p Rarely
					sp(:sp="qc")
					p Always

		script#sp(type="text/x-template")
			span(:class="activeClass == index ? 'option active':'option'" v-for="index in 7" key="index" :data-value="index" @click="onAnswerClick(index); count")
				

		script.
			const app = Vue.createApp({
				data() {
					return {
						questions: {},
						ansQ: '0 ',
						totalQ: '0 '
					}
				},
				created: function() {
					this.onSliderInfoCatch();
				},
				mounted: function() {
					var swiper = new Swiper(".mySwiper", {
						slidePerView: '1',
						pagination: {
							el: ".swiper-pagination",
							type: "progressbar",
						},
						navigation: {
							nextEl: ".swiper-next",
							prevEl: ".swiper-prev",
						},
					});
					
					var totalQ = document.querySelector('.q-card');
					console.log(document.querySelector('.q-card'));
				},
				methods: {
					onSliderInfoCatch: function(){
						var sObj = {};
						axios.get('api/data_question.json', sObj)
							.then(function (res) {
								this.questions = res.data.questions
							}.bind(this))
							.catch(function (error) {
								console.log(error)
							}
						);
					}
				}
			});
			
			app.component('qs', {
				template: '#qs',
				props:['qs']
			});

			app.component('qc', {
				template: '#qc',
				props:['qc']
			});

			app.component('sp', {
				template: '#sp',
				data: function () {
					return {
						activeClass: -1
					}
				},
				props:['sp'],
				methods: {
					onAnswerClick: function(index){
						this.activeClass = index;
					}
				}
			});

			app.mount('#app');